version: '3.7'

services:

  consul-agent:
    image: ${DOCKER_REGISTRY:-docker.io}/consul:latest
    container_name: consul-agent-${CONSUL_UI_PORT:-8500}
    restart: always
    environment:
      - CONSUL_ALLOW_PRIVILEGED_PORTS=yes
    ports:
      #      - "8400:8400"
      - "${CONSUL_UI_PORT:-8500}:8500"
    #      - "8600:53"
    #      - "8600:53/udp"
    entrypoint: ""
    command: sh -c "if [ '${AGENT_MODE:-server}' = 'server' ]; then /usr/local/bin/docker-entrypoint.sh agent -ui -client 0.0.0.0 -dns-port 53 -server -bootstrap-expect 1; fi;
      if [ '${AGENT_MODE}' = 'server-join' ]; then /usr/local/bin/docker-entrypoint.sh agent -ui -client 0.0.0.0 -dns-port 53 -server -retry-join ${BOOTSTRAP_IP}; fi;
      if [ '${AGENT_MODE}' = 'client' ]; then /usr/local/bin/docker-entrypoint.sh agent -ui -retry-join ${BOOTSTRAP_IP} -client 0.0.0.0 -dns-port 53; fi"

  #  -advertise ${MY_IP}


  dns-registrator:
    image: ${DOCKER_REGISTRY:-docker.io}/gliderlabs/registrator:latest
    container_name: registrator
    restart: always
    command: -retry-attempts 10 consul://consul-agent-${CONSUL_UI_PORT:-8500}:8500
    depends_on:
      - consul-agent
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock

  dns-server-ip:
    image: ${DOCKER_REGISTRY:-docker.io}/olegabu/fabric-tools-extended:${FABRIC_STARTER_VERSION:-latest}
    container_name: dns-server-ip
    entrypoint: []
    command: /bin/sh -c 'set -x; echo DNS_SERVER=`getent ahostsv4 consul-agent-${CONSUL_UI_PORT:-8500} | head -n 1 | grep -Po "\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}"` > /data/.dns-env'
    volumes:
      - ${FABRIC_STARTER_HOME:-.}/data:/data
    depends_on:
      - consul-agent


networks:
  default:
    external: false
    name: fabric-starter_default

